@page "/programs"

<PageTitle>IT Школа - Образовательные программы</PageTitle>

<div class="container mt-4">
    <h1>Образовательные программы</h1>

    @if (currentUser?.Role != "Admin")
    {
        <div class="alert alert-danger">
            <h4>Доступ запрещен</h4>
            <p>Эта страница доступна только администраторам.</p>
        </div>
        return;
    }

    <div class="row mb-3">
        <div class="col-md-12">
            <button class="btn btn-primary" @onclick="() => ShowCreateProgram = true">
                Создать новую программу
            </button>
        </div>
    </div>

    <div class="row">
        @if (programs.Any())
        {
            @foreach (var program in programs)
            {
                <div class="col-md-6 col-lg-4 mb-3">
                    <div class="card">
                        <div class="card-header">
                            <h5>@program.Title</h5>
                        </div>
                        <div class="card-body">
                            <p class="text-muted">@program.Description</p>
                            <p><strong>Уроков:</strong> @program.Lessons.Count</p>
                            
                            <div class="mt-3">
                                <button class="btn btn-sm btn-info" @onclick="() => ViewProgramDetails(program)">
                                    Детали
                                </button>
                                <button class="btn btn-sm btn-success" @onclick="() => AddLessonToProgram(program)">
                                    Добавить урок
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-md-12">
                <div class="alert alert-info">
                    <h4>Нет программ</h4>
                    <p>Создайте первую образовательную программу.</p>
                </div>
            </div>
        }
    </div>

    @if (ShowCreateProgram)
    {
        <div class="modal fade show" style="display: block;" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Создать образовательную программу</h5>
                        <button type="button" class="btn-close" @onclick="() => ShowCreateProgram = false"></button>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="newProgram" OnValidSubmit="CreateProgram">
                            <DataAnnotationsValidator />

                            <div class="mb-3">
                                <label for="title" class="form-label">Название программы</label>
                                <InputText id="title" class="form-control" @bind-Value="newProgram.Title" />
                                <ValidationMessage For="@(() => newProgram.Title)" />
                            </div>

                            <div class="mb-3">
                                <label for="description" class="form-label">Описание</label>
                                <InputTextArea id="description" class="form-control" @bind-Value="newProgram.Description" rows="3" />
                                <ValidationMessage For="@(() => newProgram.Description)" />
                            </div>

                            <div class="d-flex gap-2">
                                <button type="submit" class="btn btn-primary">Создать</button>
                                <button type="button" class="btn btn-secondary" @onclick="() => ShowCreateProgram = false">Отмена</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }

    @if (selectedProgram != null)
    {
        <div class="modal fade show" style="display: block;" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Программа: @selectedProgram.Title</h5>
                        <button type="button" class="btn-close" @onclick="() => selectedProgram = null"></button>
                    </div>
                    <div class="modal-body">
                        <h6>Описание</h6>
                        <p>@selectedProgram.Description</p>

                        <h6 class="mt-3">Уроки программы</h6>
                        @if (selectedProgram.Lessons.Any())
                        {
                            <div class="list-group">
                                @foreach (var lesson in selectedProgram.Lessons)
                                {
                                    <div class="list-group-item">
                                        <h6>@lesson.Title</h6>
                                        <p class="mb-1">@lesson.Description</p>
                                        <small class="text-muted">Материалов: @lesson.Materials.Count</small>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="text-muted">В программе нет уроков</p>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }
</div>

@code {
    [Inject] private ApiRequestService apiService { get; set; }

    private User currentUser;
    private List<EducationalProgram> programs = new();
    private EducationalProgram selectedProgram;
    private bool ShowCreateProgram = false;
    private EducationalProgram newProgram = new();

    protected override async Task OnInitializedAsync()
    {
        currentUser = await apiService.GetCurrentUser();
        if (currentUser?.Role == "Admin")
        {
            await LoadData();
        }
    }

    private async Task LoadData()
    {
        programs = await apiService.GetEducationalPrograms();
    }

    private void ViewProgramDetails(EducationalProgram program)
    {
        selectedProgram = program;
    }

    private void AddLessonToProgram(EducationalProgram program)
    {
        // Логика добавления урока в программу
    }

    private async Task CreateProgram()
    {
        var success = await apiService.CreateEducationalProgram(newProgram);
        if (success)
        {
            ShowCreateProgram = false;
            newProgram = new();
            await LoadData();
        }
    }
} 