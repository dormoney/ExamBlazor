@page "/lessons"

<PageTitle>IT Школа - Уроки</PageTitle>

<div class="container mt-4">
    <h1>Уроки</h1>

    @if (currentUser == null)
    {
        <div class="alert alert-warning">
            <h4>Требуется авторизация</h4>
            <p>Войдите в систему, чтобы просматривать уроки.</p>
        </div>
        return;
    }

    <div class="row">
        <div class="col-md-8">
            @if (lessons.Any())
            {
                @foreach (var lesson in lessons)
                {
                    <div class="card mb-3">
                        <div class="card-header">
                            <h5>@lesson.Title</h5>
                            <p class="text-muted mb-0">Программа: @lesson.EducationalProgram?.Title</p>
                        </div>
                        <div class="card-body">
                            <p>@lesson.Description</p>
                            
                            @if (lesson.Materials.Any())
                            {
                                <h6>Материалы:</h6>
                                <div class="row">
                                    @foreach (var material in lesson.Materials)
                                    {
                                        <div class="col-md-6 mb-2">
                                            <div class="card">
                                                <div class="card-body">
                                                    <h6>@material.Title</h6>
                                                    @if (!string.IsNullOrEmpty(material.Content))
                                                    {
                                                        <p class="small">@material.Content</p>
                                                    }
                                                    @if (!string.IsNullOrEmpty(material.Link))
                                                    {
                                                        <a href="@material.Link" target="_blank" class="btn btn-sm btn-outline-primary">
                                                            Открыть ссылку
                                                        </a>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }

                            <div class="mt-3">
                                <button class="btn btn-primary" @onclick="() => OpenChat(lesson)">
                                    Открыть чат
                                </button>
                                @if (currentUser.Role == "Student")
                                {
                                    <button class="btn btn-success" @onclick="() => MarkAsCompleted(lesson)">
                                        Отметить как завершенный
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="alert alert-info">
                    <h4>Нет доступных уроков</h4>
                    <p>Уроки появятся после добавления в группу.</p>
                </div>
            }
        </div>

        <div class="col-md-4">
            @if (selectedLesson != null)
            {
                <div class="card">
                    <div class="card-header">
                        <h5>Чат: @selectedLesson.Title</h5>
                        <button type="button" class="btn-close" @onclick="() => selectedLesson = null"></button>
                    </div>
                    <div class="card-body">
                        <div class="chat-messages" style="height: 300px; overflow-y: auto;">
                            @if (messages.Any())
                            {
                                @foreach (var message in messages)
                                {
                                    <div class="message @(message.SenderId == currentUser?.Id ? "text-end" : "text-start")">
                                        <div class="card @(message.SenderId == currentUser?.Id ? "bg-primary text-white" : "bg-light") mb-2">
                                            <div class="card-body p-2">
                                                <small class="d-block">@message.Sender?.Name</small>
                                                <p class="mb-0">@message.Content</p>
                                                <small class="d-block">@message.CreatedAt.ToString("HH:mm")</small>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <p class="text-muted text-center">Нет сообщений</p>
                            }
                        </div>

                        <div class="mt-3">
                            <div class="input-group">
                                <input type="text" class="form-control" @bind="newMessage" @bind:event="oninput" 
                                       placeholder="Введите сообщение..." @onkeypress="HandleKeyPress" />
                                <button class="btn btn-primary" @onclick="SendMessage" disabled="@string.IsNullOrEmpty(newMessage)">
                                    Отправить
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-header">
                        <h5>Чат</h5>
                    </div>
                    <div class="card-body">
                        <p class="text-muted">Выберите урок, чтобы открыть чат.</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .chat-messages {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        padding: 10px;
    }
    
    .message .card {
        max-width: 80%;
        display: inline-block;
    }
</style>

@code {
    [Inject] private ApiRequestService apiService { get; set; }

    private User currentUser;
    private List<Lesson> lessons = new();
    private List<Message> messages = new();
    private Lesson selectedLesson;
    private string newMessage = "";

    protected override async Task OnInitializedAsync()
    {
        currentUser = await apiService.GetCurrentUser();
        if (currentUser != null)
        {
            await LoadData();
        }
    }

    private async Task LoadData()
    {
        lessons = await apiService.GetLessons();
    }

    private async Task OpenChat(Lesson lesson)
    {
        selectedLesson = lesson;
        await LoadMessages(lesson.Id);
    }

    private async Task LoadMessages(int lessonId)
    {
        messages = await apiService.GetMessages(lessonId);
        StateHasChanged();
    }

    private async Task SendMessage()
    {
        if (!string.IsNullOrEmpty(newMessage) && selectedLesson != null && currentUser != null)
        {
            var messageDto = new CreateMessageDto
            {
                Content = newMessage,
                LessonId = selectedLesson.Id
            };

            var success = await apiService.CreateMessage(messageDto);
            if (success)
            {
                newMessage = "";
                await LoadMessages(selectedLesson.Id);
            }
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SendMessage();
        }
    }

    private async Task MarkAsCompleted(Lesson lesson)
    {
        // Логика отметки урока как завершенного
    }
} 