@page "/register"

<PageTitle>IT Школа - Регистрация</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-violet-light">
                    <h3 class="text-center text-violet">Регистрация</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger">
                            @errorMessage
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success">
                            @successMessage
                        </div>
                    }

                    <EditForm Model="registerRequest" OnValidSubmit="HandleRegister" FormName="RegisterForm">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <InputText id="email" class="form-control" @bind-Value="registerRequest.Email" />
                            <ValidationMessage For="@(() => registerRequest.Email)" />
                        </div>

                        <div class="mb-3">
                            <label for="name" class="form-label">Имя</label>
                            <InputText id="name" class="form-control" @bind-Value="registerRequest.Name" />
                            <ValidationMessage For="@(() => registerRequest.Name)" />
                        </div>

                        <div class="mb-3">
                            <label for="description" class="form-label">Описание</label>
                            <InputTextArea id="description" class="form-control" @bind-Value="registerRequest.Description" rows="3" />
                            <ValidationMessage For="@(() => registerRequest.Description)" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Пароль</label>
                            <InputText type="password" id="password" class="form-control" @bind-Value="registerRequest.Password" />
                            <ValidationMessage For="@(() => registerRequest.Password)" />
                        </div>

                        <div class="mb-3">
                            <label for="role" class="form-label">Роль</label>
                            <InputSelect id="role" class="form-control" @bind-Value="registerRequest.Role">
                                <option value="">Выберите роль</option>
                                <option value="Student">Студент</option>
                                <option value="Teacher">Преподаватель</option>
                                <option value="Admin">Администратор</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => registerRequest.Role)" />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    <span>Зарегистрироваться...</span>
                                }
                                else
                                {
                                    <span>Зарегистрироваться</span>
                                }
                            </button>
                        </div>
                    </EditForm>

                    <div class="text-center mt-3">
                        <p>Уже есть аккаунт? <a href="/login">Войти</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject] private ApiRequestService apiService { get; set; }
    [Inject] private NavigationManager navigationManager { get; set; }

    private RegisterRequest registerRequest = new();
    private string errorMessage = "";
    private string successMessage = "";
    private bool isLoading = false;

    private async Task HandleRegister()
    {
        isLoading = true;
        errorMessage = "";
        successMessage = "";

        try
        {
            var success = await apiService.Register(registerRequest);
            if (success)
            {
                successMessage = "Регистрация успешна! Теперь вы можете войти в систему.";
                registerRequest = new();
            }
            else
            {
                errorMessage = "Ошибка при регистрации. Возможно, пользователь с таким email уже существует или данные некорректны.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "Ошибка при регистрации: " + ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }
} 